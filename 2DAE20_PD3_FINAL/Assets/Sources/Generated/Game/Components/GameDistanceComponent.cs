//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DistanceComponent distance { get { return (DistanceComponent)GetComponent(GameComponentsLookup.Distance); } }
    public bool hasDistance { get { return HasComponent(GameComponentsLookup.Distance); } }

    public void AddDistance(float newDistance) {
        var index = GameComponentsLookup.Distance;
        var component = CreateComponent<DistanceComponent>(index);
        component.Distance = newDistance;
        AddComponent(index, component);
    }

    public void ReplaceDistance(float newDistance) {
        var index = GameComponentsLookup.Distance;
        var component = CreateComponent<DistanceComponent>(index);
        component.Distance = newDistance;
        ReplaceComponent(index, component);
    }

    public void RemoveDistance() {
        RemoveComponent(GameComponentsLookup.Distance);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDistance;

    public static Entitas.IMatcher<GameEntity> Distance {
        get {
            if (_matcherDistance == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Distance);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDistance = matcher;
            }

            return _matcherDistance;
        }
    }
}
