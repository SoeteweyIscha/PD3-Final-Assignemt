//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GridPos gridPos { get { return (GridPos)GetComponent(GameComponentsLookup.GridPos); } }
    public bool hasGridPos { get { return HasComponent(GameComponentsLookup.GridPos); } }

    public void AddGridPos(int newX, int newY) {
        var index = GameComponentsLookup.GridPos;
        var component = CreateComponent<GridPos>(index);
        component.x = newX;
        component.y = newY;
        AddComponent(index, component);
    }

    public void ReplaceGridPos(int newX, int newY) {
        var index = GameComponentsLookup.GridPos;
        var component = CreateComponent<GridPos>(index);
        component.x = newX;
        component.y = newY;
        ReplaceComponent(index, component);
    }

    public void RemoveGridPos() {
        RemoveComponent(GameComponentsLookup.GridPos);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGridPos;

    public static Entitas.IMatcher<GameEntity> GridPos {
        get {
            if (_matcherGridPos == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GridPos);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGridPos = matcher;
            }

            return _matcherGridPos;
        }
    }
}
